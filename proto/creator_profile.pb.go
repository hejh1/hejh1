//nolint

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: creator_profile.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreatorProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatorUid                  *string  `protobuf:"bytes,1,opt,name=creatorUid,proto3,oneof" json:"creatorUid,omitempty"`
	Name                        *string  `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Bio                         *string  `protobuf:"bytes,3,opt,name=bio,proto3,oneof" json:"bio,omitempty"`
	PhotoUrl                    *string  `protobuf:"bytes,4,opt,name=photoUrl,proto3,oneof" json:"photoUrl,omitempty"`
	IsPrivate                   *bool    `protobuf:"varint,5,opt,name=isPrivate,proto3,oneof" json:"isPrivate,omitempty"`
	Karma                       *float32 `protobuf:"fixed32,6,opt,name=karma,proto3,oneof" json:"karma,omitempty"`
	InWaitingList               *bool    `protobuf:"varint,7,opt,name=inWaitingList,proto3,oneof" json:"inWaitingList,omitempty"`
	MaxInvite                   *int64   `protobuf:"varint,8,opt,name=maxInvite,proto3,oneof" json:"maxInvite,omitempty"`
	UsedInvite                  *int64   `protobuf:"varint,9,opt,name=usedInvite,proto3,oneof" json:"usedInvite,omitempty"`
	Username                    *string  `protobuf:"bytes,10,opt,name=username,proto3,oneof" json:"username,omitempty"`
	IsNPC                       *bool    `protobuf:"varint,11,opt,name=isNPC,proto3,oneof" json:"isNPC,omitempty"`
	IsDeleted                   *bool    `protobuf:"varint,12,opt,name=isDeleted,proto3,oneof" json:"isDeleted,omitempty"`
	Tags                        []string `protobuf:"bytes,13,rep,name=tags,proto3" json:"tags,omitempty"`
	HuddleKarma                 *float32 `protobuf:"fixed32,14,opt,name=huddleKarma,proto3,oneof" json:"huddleKarma,omitempty"`
	SubscriptionTier            *string  `protobuf:"bytes,15,opt,name=subscriptionTier,proto3,oneof" json:"subscriptionTier,omitempty"`
	SubscriptionExpirationDate  *string  `protobuf:"bytes,16,opt,name=subscriptionExpirationDate,proto3,oneof" json:"subscriptionExpirationDate,omitempty"`
	SubscriptionCredits         *int64   `protobuf:"varint,17,opt,name=subscriptionCredits,proto3,oneof" json:"subscriptionCredits,omitempty"`
	SubscriptionTrainingCredits *int64   `protobuf:"varint,18,opt,name=subscriptionTrainingCredits,proto3,oneof" json:"subscriptionTrainingCredits,omitempty"`
	IsFeatured                  *bool    `protobuf:"varint,19,opt,name=isFeatured,proto3,oneof" json:"isFeatured,omitempty"`
	ModelPrivacy                *string  `protobuf:"bytes,20,opt,name=modelPrivacy,proto3,oneof" json:"modelPrivacy,omitempty"`
	RealmCredits                *int64   `protobuf:"varint,21,opt,name=realmCredits,proto3,oneof" json:"realmCredits,omitempty"`
}

func (x *CreatorProfile) Reset() {
	*x = CreatorProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_creator_profile_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatorProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatorProfile) ProtoMessage() {}

func (x *CreatorProfile) ProtoReflect() protoreflect.Message {
	mi := &file_creator_profile_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatorProfile.ProtoReflect.Descriptor instead.
func (*CreatorProfile) Descriptor() ([]byte, []int) {
	return file_creator_profile_proto_rawDescGZIP(), []int{0}
}

func (x *CreatorProfile) GetCreatorUid() string {
	if x != nil && x.CreatorUid != nil {
		return *x.CreatorUid
	}
	return ""
}

func (x *CreatorProfile) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CreatorProfile) GetBio() string {
	if x != nil && x.Bio != nil {
		return *x.Bio
	}
	return ""
}

func (x *CreatorProfile) GetPhotoUrl() string {
	if x != nil && x.PhotoUrl != nil {
		return *x.PhotoUrl
	}
	return ""
}

func (x *CreatorProfile) GetIsPrivate() bool {
	if x != nil && x.IsPrivate != nil {
		return *x.IsPrivate
	}
	return false
}

func (x *CreatorProfile) GetKarma() float32 {
	if x != nil && x.Karma != nil {
		return *x.Karma
	}
	return 0
}

func (x *CreatorProfile) GetInWaitingList() bool {
	if x != nil && x.InWaitingList != nil {
		return *x.InWaitingList
	}
	return false
}

func (x *CreatorProfile) GetMaxInvite() int64 {
	if x != nil && x.MaxInvite != nil {
		return *x.MaxInvite
	}
	return 0
}

func (x *CreatorProfile) GetUsedInvite() int64 {
	if x != nil && x.UsedInvite != nil {
		return *x.UsedInvite
	}
	return 0
}

func (x *CreatorProfile) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *CreatorProfile) GetIsNPC() bool {
	if x != nil && x.IsNPC != nil {
		return *x.IsNPC
	}
	return false
}

func (x *CreatorProfile) GetIsDeleted() bool {
	if x != nil && x.IsDeleted != nil {
		return *x.IsDeleted
	}
	return false
}

func (x *CreatorProfile) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreatorProfile) GetHuddleKarma() float32 {
	if x != nil && x.HuddleKarma != nil {
		return *x.HuddleKarma
	}
	return 0
}

func (x *CreatorProfile) GetSubscriptionTier() string {
	if x != nil && x.SubscriptionTier != nil {
		return *x.SubscriptionTier
	}
	return ""
}

func (x *CreatorProfile) GetSubscriptionExpirationDate() string {
	if x != nil && x.SubscriptionExpirationDate != nil {
		return *x.SubscriptionExpirationDate
	}
	return ""
}

func (x *CreatorProfile) GetSubscriptionCredits() int64 {
	if x != nil && x.SubscriptionCredits != nil {
		return *x.SubscriptionCredits
	}
	return 0
}

func (x *CreatorProfile) GetSubscriptionTrainingCredits() int64 {
	if x != nil && x.SubscriptionTrainingCredits != nil {
		return *x.SubscriptionTrainingCredits
	}
	return 0
}

func (x *CreatorProfile) GetIsFeatured() bool {
	if x != nil && x.IsFeatured != nil {
		return *x.IsFeatured
	}
	return false
}

func (x *CreatorProfile) GetModelPrivacy() string {
	if x != nil && x.ModelPrivacy != nil {
		return *x.ModelPrivacy
	}
	return ""
}

func (x *CreatorProfile) GetRealmCredits() int64 {
	if x != nil && x.RealmCredits != nil {
		return *x.RealmCredits
	}
	return 0
}

type CreatorProfiles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profiles []*CreatorProfile `protobuf:"bytes,1,rep,name=profiles,proto3" json:"profiles,omitempty"`
}

func (x *CreatorProfiles) Reset() {
	*x = CreatorProfiles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_creator_profile_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatorProfiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatorProfiles) ProtoMessage() {}

func (x *CreatorProfiles) ProtoReflect() protoreflect.Message {
	mi := &file_creator_profile_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatorProfiles.ProtoReflect.Descriptor instead.
func (*CreatorProfiles) Descriptor() ([]byte, []int) {
	return file_creator_profile_proto_rawDescGZIP(), []int{1}
}

func (x *CreatorProfiles) GetProfiles() []*CreatorProfile {
	if x != nil {
		return x.Profiles
	}
	return nil
}

var File_creator_profile_proto protoreflect.FileDescriptor

var file_creator_profile_proto_rawDesc = []byte{
	0x0a, 0x15, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x82,
	0x09, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x12, 0x23, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x55, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x15, 0x0a, 0x03, 0x62, 0x69, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x03,
	0x62, 0x69, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x55,
	0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x08, 0x70, 0x68, 0x6f, 0x74,
	0x6f, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x69, 0x73, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x04, 0x52, 0x09, 0x69, 0x73,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6b, 0x61,
	0x72, 0x6d, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x48, 0x05, 0x52, 0x05, 0x6b, 0x61, 0x72,
	0x6d, 0x61, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0d, 0x69, 0x6e, 0x57, 0x61, 0x69, 0x74, 0x69,
	0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x06, 0x52, 0x0d,
	0x69, 0x6e, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x21, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x07, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x48, 0x08, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x64, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x69, 0x73, 0x4e,
	0x50, 0x43, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0a, 0x52, 0x05, 0x69, 0x73, 0x4e, 0x50,
	0x43, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0b, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x25, 0x0a, 0x0b, 0x68,
	0x75, 0x64, 0x64, 0x6c, 0x65, 0x4b, 0x61, 0x72, 0x6d, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02,
	0x48, 0x0c, 0x52, 0x0b, 0x68, 0x75, 0x64, 0x64, 0x6c, 0x65, 0x4b, 0x61, 0x72, 0x6d, 0x61, 0x88,
	0x01, 0x01, 0x12, 0x2f, 0x0a, 0x10, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x10,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x65, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x43, 0x0a, 0x1a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0e, 0x52, 0x1a, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x13, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0f, 0x52, 0x13, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x45, 0x0a, 0x1b, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x10, 0x52, 0x1b, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x69, 0x73, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x48, 0x11, 0x52, 0x0a, 0x69, 0x73,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x12, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x43, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x48, 0x13, 0x52, 0x0c, 0x72, 0x65,
	0x61, 0x6c, 0x6d, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x62, 0x69, 0x6f, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x55, 0x72, 0x6c, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69,
	0x73, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6b, 0x61, 0x72,
	0x6d, 0x61, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x69, 0x6e, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d, 0x61, 0x78, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x69, 0x73, 0x4e, 0x50, 0x43, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x73, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x68, 0x75, 0x64, 0x64, 0x6c,
	0x65, 0x4b, 0x61, 0x72, 0x6d, 0x61, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x65, 0x72, 0x42, 0x1d, 0x0a, 0x1b, 0x5f,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x73, 0x42, 0x1e, 0x0a, 0x1c, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x69, 0x73, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x43, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x73, 0x22, 0x44, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x42, 0x23, 0x5a, 0x21, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x6f, 0x67, 0x77, 0x61, 0x79, 0x6c, 0x61,
	0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_creator_profile_proto_rawDescOnce sync.Once
	file_creator_profile_proto_rawDescData = file_creator_profile_proto_rawDesc
)

func file_creator_profile_proto_rawDescGZIP() []byte {
	file_creator_profile_proto_rawDescOnce.Do(func() {
		file_creator_profile_proto_rawDescData = protoimpl.X.CompressGZIP(file_creator_profile_proto_rawDescData)
	})
	return file_creator_profile_proto_rawDescData
}

var file_creator_profile_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_creator_profile_proto_goTypes = []interface{}{
	(*CreatorProfile)(nil),  // 0: proto.CreatorProfile
	(*CreatorProfiles)(nil), // 1: proto.CreatorProfiles
}
var file_creator_profile_proto_depIdxs = []int32{
	0, // 0: proto.CreatorProfiles.profiles:type_name -> proto.CreatorProfile
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_creator_profile_proto_init() }
func file_creator_profile_proto_init() {
	if File_creator_profile_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_creator_profile_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatorProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_creator_profile_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatorProfiles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_creator_profile_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_creator_profile_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_creator_profile_proto_goTypes,
		DependencyIndexes: file_creator_profile_proto_depIdxs,
		MessageInfos:      file_creator_profile_proto_msgTypes,
	}.Build()
	File_creator_profile_proto = out.File
	file_creator_profile_proto_rawDesc = nil
	file_creator_profile_proto_goTypes = nil
	file_creator_profile_proto_depIdxs = nil
}
