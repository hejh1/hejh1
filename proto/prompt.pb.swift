// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: prompt.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

///nolint

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public enum Proto_ModelType: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case general // = 0
  case personal // = 1
  case deliberate // = 2
  case protogen // = 3
  case openjourney // = 4
  case portraitplus // = 5
  case dreamshaper // = 6
  case eimisanime // = 7
  case UNRECOGNIZED(Int)

  public init() {
    self = .general
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .general
    case 1: self = .personal
    case 2: self = .deliberate
    case 3: self = .protogen
    case 4: self = .openjourney
    case 5: self = .portraitplus
    case 6: self = .dreamshaper
    case 7: self = .eimisanime
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .general: return 0
    case .personal: return 1
    case .deliberate: return 2
    case .protogen: return 3
    case .openjourney: return 4
    case .portraitplus: return 5
    case .dreamshaper: return 6
    case .eimisanime: return 7
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Proto_ModelType: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Proto_ModelType] = [
    .general,
    .personal,
    .deliberate,
    .protogen,
    .openjourney,
    .portraitplus,
    .dreamshaper,
    .eimisanime,
  ]
}

#endif  // swift(>=4.2)

public enum Proto_GenerationSteps: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case stepsNormal // = 0
  case stepsExtended // = 1
  case UNRECOGNIZED(Int)

  public init() {
    self = .stepsNormal
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .stepsNormal
    case 1: self = .stepsExtended
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .stepsNormal: return 0
    case .stepsExtended: return 1
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Proto_GenerationSteps: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Proto_GenerationSteps] = [
    .stepsNormal,
    .stepsExtended,
  ]
}

#endif  // swift(>=4.2)

public enum Proto_GenerationQuality: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case qualityLow // = 0
  case qualityMedium // = 1
  case qualityHigh // = 2
  case UNRECOGNIZED(Int)

  public init() {
    self = .qualityLow
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .qualityLow
    case 1: self = .qualityMedium
    case 2: self = .qualityHigh
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .qualityLow: return 0
    case .qualityMedium: return 1
    case .qualityHigh: return 2
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Proto_GenerationQuality: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Proto_GenerationQuality] = [
    .qualityLow,
    .qualityMedium,
    .qualityHigh,
  ]
}

#endif  // swift(>=4.2)

/// 1:1, 4:5, 9:16, 4:3, 5:3
public enum Proto_AspectRatio: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case ratio11 // = 0
  case ratio45 // = 1
  case ratio916 // = 2
  case ratio43 // = 3
  case ratio53 // = 4
  case UNRECOGNIZED(Int)

  public init() {
    self = .ratio11
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .ratio11
    case 1: self = .ratio45
    case 2: self = .ratio916
    case 3: self = .ratio43
    case 4: self = .ratio53
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .ratio11: return 0
    case .ratio45: return 1
    case .ratio916: return 2
    case .ratio43: return 3
    case .ratio53: return 4
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Proto_AspectRatio: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Proto_AspectRatio] = [
    .ratio11,
    .ratio45,
    .ratio916,
    .ratio43,
    .ratio53,
  ]
}

#endif  // swift(>=4.2)

public enum Proto_GuidanceScale: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case scaleLow // = 0
  case scaleMedium // = 1
  case scaleHigh // = 2
  case UNRECOGNIZED(Int)

  public init() {
    self = .scaleLow
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .scaleLow
    case 1: self = .scaleMedium
    case 2: self = .scaleHigh
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .scaleLow: return 0
    case .scaleMedium: return 1
    case .scaleHigh: return 2
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Proto_GuidanceScale: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Proto_GuidanceScale] = [
    .scaleLow,
    .scaleMedium,
    .scaleHigh,
  ]
}

#endif  // swift(>=4.2)

public enum Proto_ControlType: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case none // = 0
  case pose // = 1
  case UNRECOGNIZED(Int)

  public init() {
    self = .none
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .none
    case 1: self = .pose
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .none: return 0
    case .pose: return 1
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Proto_ControlType: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Proto_ControlType] = [
    .none,
    .pose,
  ]
}

#endif  // swift(>=4.2)

public enum Proto_RealmPostType: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case daily // = 0
  case custom // = 1
  case refit // = 2
  case featured // = 3
  case UNRECOGNIZED(Int)

  public init() {
    self = .daily
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .daily
    case 1: self = .custom
    case 2: self = .refit
    case 3: self = .featured
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .daily: return 0
    case .custom: return 1
    case .refit: return 2
    case .featured: return 3
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Proto_RealmPostType: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Proto_RealmPostType] = [
    .daily,
    .custom,
    .refit,
    .featured,
  ]
}

#endif  // swift(>=4.2)

public struct Proto_PromptRequest {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var uid: String {
    get {return _storage._uid ?? String()}
    set {_uniqueStorage()._uid = newValue}
  }
  /// Returns true if `uid` has been explicitly set.
  public var hasUid: Bool {return _storage._uid != nil}
  /// Clears the value of `uid`. Subsequent reads from it will return its default value.
  public mutating func clearUid() {_uniqueStorage()._uid = nil}

  public var appID: String {
    get {return _storage._appID ?? String()}
    set {_uniqueStorage()._appID = newValue}
  }
  /// Returns true if `appID` has been explicitly set.
  public var hasAppID: Bool {return _storage._appID != nil}
  /// Clears the value of `appID`. Subsequent reads from it will return its default value.
  public mutating func clearAppID() {_uniqueStorage()._appID = nil}

  public var requestID: String {
    get {return _storage._requestID ?? String()}
    set {_uniqueStorage()._requestID = newValue}
  }
  /// Returns true if `requestID` has been explicitly set.
  public var hasRequestID: Bool {return _storage._requestID != nil}
  /// Clears the value of `requestID`. Subsequent reads from it will return its default value.
  public mutating func clearRequestID() {_uniqueStorage()._requestID = nil}

  public var promptPositive: String {
    get {return _storage._promptPositive ?? String()}
    set {_uniqueStorage()._promptPositive = newValue}
  }
  /// Returns true if `promptPositive` has been explicitly set.
  public var hasPromptPositive: Bool {return _storage._promptPositive != nil}
  /// Clears the value of `promptPositive`. Subsequent reads from it will return its default value.
  public mutating func clearPromptPositive() {_uniqueStorage()._promptPositive = nil}

  public var promptNegative: String {
    get {return _storage._promptNegative ?? String()}
    set {_uniqueStorage()._promptNegative = newValue}
  }
  /// Returns true if `promptNegative` has been explicitly set.
  public var hasPromptNegative: Bool {return _storage._promptNegative != nil}
  /// Clears the value of `promptNegative`. Subsequent reads from it will return its default value.
  public mutating func clearPromptNegative() {_uniqueStorage()._promptNegative = nil}

  public var allowNsfw: Bool {
    get {return _storage._allowNsfw ?? false}
    set {_uniqueStorage()._allowNsfw = newValue}
  }
  /// Returns true if `allowNsfw` has been explicitly set.
  public var hasAllowNsfw: Bool {return _storage._allowNsfw != nil}
  /// Clears the value of `allowNsfw`. Subsequent reads from it will return its default value.
  public mutating func clearAllowNsfw() {_uniqueStorage()._allowNsfw = nil}

  public var timestamp: SwiftProtobuf.Google_Protobuf_Timestamp {
    get {return _storage._timestamp ?? SwiftProtobuf.Google_Protobuf_Timestamp()}
    set {_uniqueStorage()._timestamp = newValue}
  }
  /// Returns true if `timestamp` has been explicitly set.
  public var hasTimestamp: Bool {return _storage._timestamp != nil}
  /// Clears the value of `timestamp`. Subsequent reads from it will return its default value.
  public mutating func clearTimestamp() {_uniqueStorage()._timestamp = nil}

  public var type: String {
    get {return _storage._type ?? String()}
    set {_uniqueStorage()._type = newValue}
  }
  /// Returns true if `type` has been explicitly set.
  public var hasType: Bool {return _storage._type != nil}
  /// Clears the value of `type`. Subsequent reads from it will return its default value.
  public mutating func clearType() {_uniqueStorage()._type = nil}

  public var notificationID: String {
    get {return _storage._notificationID ?? String()}
    set {_uniqueStorage()._notificationID = newValue}
  }
  /// Returns true if `notificationID` has been explicitly set.
  public var hasNotificationID: Bool {return _storage._notificationID != nil}
  /// Clears the value of `notificationID`. Subsequent reads from it will return its default value.
  public mutating func clearNotificationID() {_uniqueStorage()._notificationID = nil}

  public var modelType: Proto_ModelType {
    get {return _storage._modelType ?? .general}
    set {_uniqueStorage()._modelType = newValue}
  }
  /// Returns true if `modelType` has been explicitly set.
  public var hasModelType: Bool {return _storage._modelType != nil}
  /// Clears the value of `modelType`. Subsequent reads from it will return its default value.
  public mutating func clearModelType() {_uniqueStorage()._modelType = nil}

  public var generationSteps: Proto_GenerationSteps {
    get {return _storage._generationSteps ?? .stepsNormal}
    set {_uniqueStorage()._generationSteps = newValue}
  }
  /// Returns true if `generationSteps` has been explicitly set.
  public var hasGenerationSteps: Bool {return _storage._generationSteps != nil}
  /// Clears the value of `generationSteps`. Subsequent reads from it will return its default value.
  public mutating func clearGenerationSteps() {_uniqueStorage()._generationSteps = nil}

  public var generationQuality: Proto_GenerationQuality {
    get {return _storage._generationQuality ?? .qualityLow}
    set {_uniqueStorage()._generationQuality = newValue}
  }
  /// Returns true if `generationQuality` has been explicitly set.
  public var hasGenerationQuality: Bool {return _storage._generationQuality != nil}
  /// Clears the value of `generationQuality`. Subsequent reads from it will return its default value.
  public mutating func clearGenerationQuality() {_uniqueStorage()._generationQuality = nil}

  public var aspectRatio: Proto_AspectRatio {
    get {return _storage._aspectRatio ?? .ratio11}
    set {_uniqueStorage()._aspectRatio = newValue}
  }
  /// Returns true if `aspectRatio` has been explicitly set.
  public var hasAspectRatio: Bool {return _storage._aspectRatio != nil}
  /// Clears the value of `aspectRatio`. Subsequent reads from it will return its default value.
  public mutating func clearAspectRatio() {_uniqueStorage()._aspectRatio = nil}

  public var guidanceScale: Proto_GuidanceScale {
    get {return _storage._guidanceScale ?? .scaleLow}
    set {_uniqueStorage()._guidanceScale = newValue}
  }
  /// Returns true if `guidanceScale` has been explicitly set.
  public var hasGuidanceScale: Bool {return _storage._guidanceScale != nil}
  /// Clears the value of `guidanceScale`. Subsequent reads from it will return its default value.
  public mutating func clearGuidanceScale() {_uniqueStorage()._guidanceScale = nil}

  public var startImage: String {
    get {return _storage._startImage ?? String()}
    set {_uniqueStorage()._startImage = newValue}
  }
  /// Returns true if `startImage` has been explicitly set.
  public var hasStartImage: Bool {return _storage._startImage != nil}
  /// Clears the value of `startImage`. Subsequent reads from it will return its default value.
  public mutating func clearStartImage() {_uniqueStorage()._startImage = nil}

  public var controlStrength: Int64 {
    get {return _storage._controlStrength ?? 0}
    set {_uniqueStorage()._controlStrength = newValue}
  }
  /// Returns true if `controlStrength` has been explicitly set.
  public var hasControlStrength: Bool {return _storage._controlStrength != nil}
  /// Clears the value of `controlStrength`. Subsequent reads from it will return its default value.
  public mutating func clearControlStrength() {_uniqueStorage()._controlStrength = nil}

  public var hitsToSkip: Int64 {
    get {return _storage._hitsToSkip ?? 0}
    set {_uniqueStorage()._hitsToSkip = newValue}
  }
  /// Returns true if `hitsToSkip` has been explicitly set.
  public var hasHitsToSkip: Bool {return _storage._hitsToSkip != nil}
  /// Clears the value of `hitsToSkip`. Subsequent reads from it will return its default value.
  public mutating func clearHitsToSkip() {_uniqueStorage()._hitsToSkip = nil}

  public var maskImage: String {
    get {return _storage._maskImage ?? String()}
    set {_uniqueStorage()._maskImage = newValue}
  }
  /// Returns true if `maskImage` has been explicitly set.
  public var hasMaskImage: Bool {return _storage._maskImage != nil}
  /// Clears the value of `maskImage`. Subsequent reads from it will return its default value.
  public mutating func clearMaskImage() {_uniqueStorage()._maskImage = nil}

  public var backendReleaseVersion: String {
    get {return _storage._backendReleaseVersion ?? String()}
    set {_uniqueStorage()._backendReleaseVersion = newValue}
  }
  /// Returns true if `backendReleaseVersion` has been explicitly set.
  public var hasBackendReleaseVersion: Bool {return _storage._backendReleaseVersion != nil}
  /// Clears the value of `backendReleaseVersion`. Subsequent reads from it will return its default value.
  public mutating func clearBackendReleaseVersion() {_uniqueStorage()._backendReleaseVersion = nil}

  public var appVersion: String {
    get {return _storage._appVersion ?? String()}
    set {_uniqueStorage()._appVersion = newValue}
  }
  /// Returns true if `appVersion` has been explicitly set.
  public var hasAppVersion: Bool {return _storage._appVersion != nil}
  /// Clears the value of `appVersion`. Subsequent reads from it will return its default value.
  public mutating func clearAppVersion() {_uniqueStorage()._appVersion = nil}

  public var controlType: Proto_ControlType {
    get {return _storage._controlType ?? .none}
    set {_uniqueStorage()._controlType = newValue}
  }
  /// Returns true if `controlType` has been explicitly set.
  public var hasControlType: Bool {return _storage._controlType != nil}
  /// Clears the value of `controlType`. Subsequent reads from it will return its default value.
  public mutating func clearControlType() {_uniqueStorage()._controlType = nil}

  public var controlSource: String {
    get {return _storage._controlSource ?? String()}
    set {_uniqueStorage()._controlSource = newValue}
  }
  /// Returns true if `controlSource` has been explicitly set.
  public var hasControlSource: Bool {return _storage._controlSource != nil}
  /// Clears the value of `controlSource`. Subsequent reads from it will return its default value.
  public mutating func clearControlSource() {_uniqueStorage()._controlSource = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Proto_Prompt {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var name: String {
    get {return _storage._name ?? String()}
    set {_uniqueStorage()._name = newValue}
  }
  /// Returns true if `name` has been explicitly set.
  public var hasName: Bool {return _storage._name != nil}
  /// Clears the value of `name`. Subsequent reads from it will return its default value.
  public mutating func clearName() {_uniqueStorage()._name = nil}

  public var description_p: String {
    get {return _storage._description_p ?? String()}
    set {_uniqueStorage()._description_p = newValue}
  }
  /// Returns true if `description_p` has been explicitly set.
  public var hasDescription_p: Bool {return _storage._description_p != nil}
  /// Clears the value of `description_p`. Subsequent reads from it will return its default value.
  public mutating func clearDescription_p() {_uniqueStorage()._description_p = nil}

  public var date: Int64 {
    get {return _storage._date ?? 0}
    set {_uniqueStorage()._date = newValue}
  }
  /// Returns true if `date` has been explicitly set.
  public var hasDate: Bool {return _storage._date != nil}
  /// Clears the value of `date`. Subsequent reads from it will return its default value.
  public mutating func clearDate() {_uniqueStorage()._date = nil}

  public var seed: Int64 {
    get {return _storage._seed ?? 0}
    set {_uniqueStorage()._seed = newValue}
  }
  /// Returns true if `seed` has been explicitly set.
  public var hasSeed: Bool {return _storage._seed != nil}
  /// Clears the value of `seed`. Subsequent reads from it will return its default value.
  public mutating func clearSeed() {_uniqueStorage()._seed = nil}

  public var promptPositive: String {
    get {return _storage._promptPositive ?? String()}
    set {_uniqueStorage()._promptPositive = newValue}
  }
  /// Returns true if `promptPositive` has been explicitly set.
  public var hasPromptPositive: Bool {return _storage._promptPositive != nil}
  /// Clears the value of `promptPositive`. Subsequent reads from it will return its default value.
  public mutating func clearPromptPositive() {_uniqueStorage()._promptPositive = nil}

  public var promptNegative: String {
    get {return _storage._promptNegative ?? String()}
    set {_uniqueStorage()._promptNegative = newValue}
  }
  /// Returns true if `promptNegative` has been explicitly set.
  public var hasPromptNegative: Bool {return _storage._promptNegative != nil}
  /// Clears the value of `promptNegative`. Subsequent reads from it will return its default value.
  public mutating func clearPromptNegative() {_uniqueStorage()._promptNegative = nil}

  public var sampleImagePath: [String] {
    get {return _storage._sampleImagePath}
    set {_uniqueStorage()._sampleImagePath = newValue}
  }

  public var isExample: Bool {
    get {return _storage._isExample ?? false}
    set {_uniqueStorage()._isExample = newValue}
  }
  /// Returns true if `isExample` has been explicitly set.
  public var hasIsExample: Bool {return _storage._isExample != nil}
  /// Clears the value of `isExample`. Subsequent reads from it will return its default value.
  public mutating func clearIsExample() {_uniqueStorage()._isExample = nil}

  public var modelType: Proto_ModelType {
    get {return _storage._modelType ?? .general}
    set {_uniqueStorage()._modelType = newValue}
  }
  /// Returns true if `modelType` has been explicitly set.
  public var hasModelType: Bool {return _storage._modelType != nil}
  /// Clears the value of `modelType`. Subsequent reads from it will return its default value.
  public mutating func clearModelType() {_uniqueStorage()._modelType = nil}

  public var generationSteps: Proto_GenerationSteps {
    get {return _storage._generationSteps ?? .stepsNormal}
    set {_uniqueStorage()._generationSteps = newValue}
  }
  /// Returns true if `generationSteps` has been explicitly set.
  public var hasGenerationSteps: Bool {return _storage._generationSteps != nil}
  /// Clears the value of `generationSteps`. Subsequent reads from it will return its default value.
  public mutating func clearGenerationSteps() {_uniqueStorage()._generationSteps = nil}

  public var generationQuality: Proto_GenerationQuality {
    get {return _storage._generationQuality ?? .qualityLow}
    set {_uniqueStorage()._generationQuality = newValue}
  }
  /// Returns true if `generationQuality` has been explicitly set.
  public var hasGenerationQuality: Bool {return _storage._generationQuality != nil}
  /// Clears the value of `generationQuality`. Subsequent reads from it will return its default value.
  public mutating func clearGenerationQuality() {_uniqueStorage()._generationQuality = nil}

  public var aspectRatio: Proto_AspectRatio {
    get {return _storage._aspectRatio ?? .ratio11}
    set {_uniqueStorage()._aspectRatio = newValue}
  }
  /// Returns true if `aspectRatio` has been explicitly set.
  public var hasAspectRatio: Bool {return _storage._aspectRatio != nil}
  /// Clears the value of `aspectRatio`. Subsequent reads from it will return its default value.
  public mutating func clearAspectRatio() {_uniqueStorage()._aspectRatio = nil}

  public var guidanceScale: Proto_GuidanceScale {
    get {return _storage._guidanceScale ?? .scaleLow}
    set {_uniqueStorage()._guidanceScale = newValue}
  }
  /// Returns true if `guidanceScale` has been explicitly set.
  public var hasGuidanceScale: Bool {return _storage._guidanceScale != nil}
  /// Clears the value of `guidanceScale`. Subsequent reads from it will return its default value.
  public mutating func clearGuidanceScale() {_uniqueStorage()._guidanceScale = nil}

  public var startImage: String {
    get {return _storage._startImage ?? String()}
    set {_uniqueStorage()._startImage = newValue}
  }
  /// Returns true if `startImage` has been explicitly set.
  public var hasStartImage: Bool {return _storage._startImage != nil}
  /// Clears the value of `startImage`. Subsequent reads from it will return its default value.
  public mutating func clearStartImage() {_uniqueStorage()._startImage = nil}

  public var controlStrength: Int64 {
    get {return _storage._controlStrength ?? 0}
    set {_uniqueStorage()._controlStrength = newValue}
  }
  /// Returns true if `controlStrength` has been explicitly set.
  public var hasControlStrength: Bool {return _storage._controlStrength != nil}
  /// Clears the value of `controlStrength`. Subsequent reads from it will return its default value.
  public mutating func clearControlStrength() {_uniqueStorage()._controlStrength = nil}

  public var generationCount: Int64 {
    get {return _storage._generationCount ?? 0}
    set {_uniqueStorage()._generationCount = newValue}
  }
  /// Returns true if `generationCount` has been explicitly set.
  public var hasGenerationCount: Bool {return _storage._generationCount != nil}
  /// Clears the value of `generationCount`. Subsequent reads from it will return its default value.
  public mutating func clearGenerationCount() {_uniqueStorage()._generationCount = nil}

  public var tags: [String] {
    get {return _storage._tags}
    set {_uniqueStorage()._tags = newValue}
  }

  public var maskImage: String {
    get {return _storage._maskImage ?? String()}
    set {_uniqueStorage()._maskImage = newValue}
  }
  /// Returns true if `maskImage` has been explicitly set.
  public var hasMaskImage: Bool {return _storage._maskImage != nil}
  /// Clears the value of `maskImage`. Subsequent reads from it will return its default value.
  public mutating func clearMaskImage() {_uniqueStorage()._maskImage = nil}

  public var modifierStrength: Float {
    get {return _storage._modifierStrength ?? 0}
    set {_uniqueStorage()._modifierStrength = newValue}
  }
  /// Returns true if `modifierStrength` has been explicitly set.
  public var hasModifierStrength: Bool {return _storage._modifierStrength != nil}
  /// Clears the value of `modifierStrength`. Subsequent reads from it will return its default value.
  public mutating func clearModifierStrength() {_uniqueStorage()._modifierStrength = nil}

  public var controlType: Proto_ControlType {
    get {return _storage._controlType ?? .none}
    set {_uniqueStorage()._controlType = newValue}
  }
  /// Returns true if `controlType` has been explicitly set.
  public var hasControlType: Bool {return _storage._controlType != nil}
  /// Clears the value of `controlType`. Subsequent reads from it will return its default value.
  public mutating func clearControlType() {_uniqueStorage()._controlType = nil}

  public var controlSource: String {
    get {return _storage._controlSource ?? String()}
    set {_uniqueStorage()._controlSource = newValue}
  }
  /// Returns true if `controlSource` has been explicitly set.
  public var hasControlSource: Bool {return _storage._controlSource != nil}
  /// Clears the value of `controlSource`. Subsequent reads from it will return its default value.
  public mutating func clearControlSource() {_uniqueStorage()._controlSource = nil}

  public var hidden: Bool {
    get {return _storage._hidden ?? false}
    set {_uniqueStorage()._hidden = newValue}
  }
  /// Returns true if `hidden` has been explicitly set.
  public var hasHidden: Bool {return _storage._hidden != nil}
  /// Clears the value of `hidden`. Subsequent reads from it will return its default value.
  public mutating func clearHidden() {_uniqueStorage()._hidden = nil}

  public var timestamp: Double {
    get {return _storage._timestamp ?? 0}
    set {_uniqueStorage()._timestamp = newValue}
  }
  /// Returns true if `timestamp` has been explicitly set.
  public var hasTimestamp: Bool {return _storage._timestamp != nil}
  /// Clears the value of `timestamp`. Subsequent reads from it will return its default value.
  public mutating func clearTimestamp() {_uniqueStorage()._timestamp = nil}

  public var uid: String {
    get {return _storage._uid ?? String()}
    set {_uniqueStorage()._uid = newValue}
  }
  /// Returns true if `uid` has been explicitly set.
  public var hasUid: Bool {return _storage._uid != nil}
  /// Clears the value of `uid`. Subsequent reads from it will return its default value.
  public mutating func clearUid() {_uniqueStorage()._uid = nil}

  public var postType: Proto_RealmPostType {
    get {return _storage._postType ?? .daily}
    set {_uniqueStorage()._postType = newValue}
  }
  /// Returns true if `postType` has been explicitly set.
  public var hasPostType: Bool {return _storage._postType != nil}
  /// Clears the value of `postType`. Subsequent reads from it will return its default value.
  public mutating func clearPostType() {_uniqueStorage()._postType = nil}

  public var threadID: String {
    get {return _storage._threadID ?? String()}
    set {_uniqueStorage()._threadID = newValue}
  }
  /// Returns true if `threadID` has been explicitly set.
  public var hasThreadID: Bool {return _storage._threadID != nil}
  /// Clears the value of `threadID`. Subsequent reads from it will return its default value.
  public mutating func clearThreadID() {_uniqueStorage()._threadID = nil}

  public var promptID: String {
    get {return _storage._promptID ?? String()}
    set {_uniqueStorage()._promptID = newValue}
  }
  /// Returns true if `promptID` has been explicitly set.
  public var hasPromptID: Bool {return _storage._promptID != nil}
  /// Clears the value of `promptID`. Subsequent reads from it will return its default value.
  public mutating func clearPromptID() {_uniqueStorage()._promptID = nil}

  public var enforcedPromptNegative: String {
    get {return _storage._enforcedPromptNegative ?? String()}
    set {_uniqueStorage()._enforcedPromptNegative = newValue}
  }
  /// Returns true if `enforcedPromptNegative` has been explicitly set.
  public var hasEnforcedPromptNegative: Bool {return _storage._enforcedPromptNegative != nil}
  /// Clears the value of `enforcedPromptNegative`. Subsequent reads from it will return its default value.
  public mutating func clearEnforcedPromptNegative() {_uniqueStorage()._enforcedPromptNegative = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

public struct Proto_Prompts {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var prompts: [Proto_Prompt] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

public struct Proto_Features {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var features: [Float] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

#if swift(>=5.5) && canImport(_Concurrency)
extension Proto_ModelType: @unchecked Sendable {}
extension Proto_GenerationSteps: @unchecked Sendable {}
extension Proto_GenerationQuality: @unchecked Sendable {}
extension Proto_AspectRatio: @unchecked Sendable {}
extension Proto_GuidanceScale: @unchecked Sendable {}
extension Proto_ControlType: @unchecked Sendable {}
extension Proto_RealmPostType: @unchecked Sendable {}
extension Proto_PromptRequest: @unchecked Sendable {}
extension Proto_Prompt: @unchecked Sendable {}
extension Proto_Prompts: @unchecked Sendable {}
extension Proto_Features: @unchecked Sendable {}
#endif  // swift(>=5.5) && canImport(_Concurrency)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "proto"

extension Proto_ModelType: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "GENERAL"),
    1: .same(proto: "PERSONAL"),
    2: .same(proto: "DELIBERATE"),
    3: .same(proto: "PROTOGEN"),
    4: .same(proto: "OPENJOURNEY"),
    5: .same(proto: "PORTRAITPLUS"),
    6: .same(proto: "DREAMSHAPER"),
    7: .same(proto: "EIMISANIME"),
  ]
}

extension Proto_GenerationSteps: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "STEPS_NORMAL"),
    1: .same(proto: "STEPS_EXTENDED"),
  ]
}

extension Proto_GenerationQuality: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "QUALITY_LOW"),
    1: .same(proto: "QUALITY_MEDIUM"),
    2: .same(proto: "QUALITY_HIGH"),
  ]
}

extension Proto_AspectRatio: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "RATIO_1_1"),
    1: .same(proto: "RATIO_4_5"),
    2: .same(proto: "RATIO_9_16"),
    3: .same(proto: "RATIO_4_3"),
    4: .same(proto: "RATIO_5_3"),
  ]
}

extension Proto_GuidanceScale: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "SCALE_LOW"),
    1: .same(proto: "SCALE_MEDIUM"),
    2: .same(proto: "SCALE_HIGH"),
  ]
}

extension Proto_ControlType: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "NONE"),
    1: .same(proto: "POSE"),
  ]
}

extension Proto_RealmPostType: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "DAILY"),
    1: .same(proto: "CUSTOM"),
    2: .same(proto: "REFIT"),
    3: .same(proto: "FEATURED"),
  ]
}

extension Proto_PromptRequest: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".PromptRequest"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "uid"),
    2: .same(proto: "appID"),
    3: .same(proto: "requestID"),
    4: .same(proto: "promptPositive"),
    5: .same(proto: "promptNegative"),
    6: .same(proto: "allowNsfw"),
    7: .same(proto: "timestamp"),
    8: .same(proto: "type"),
    9: .same(proto: "notificationID"),
    10: .same(proto: "modelType"),
    11: .same(proto: "generationSteps"),
    12: .same(proto: "generationQuality"),
    13: .same(proto: "aspectRatio"),
    14: .same(proto: "guidanceScale"),
    15: .same(proto: "startImage"),
    16: .same(proto: "controlStrength"),
    17: .same(proto: "hitsToSkip"),
    18: .same(proto: "maskImage"),
    19: .same(proto: "backendReleaseVersion"),
    20: .same(proto: "appVersion"),
    21: .same(proto: "controlType"),
    22: .same(proto: "controlSource"),
  ]

  fileprivate class _StorageClass {
    var _uid: String? = nil
    var _appID: String? = nil
    var _requestID: String? = nil
    var _promptPositive: String? = nil
    var _promptNegative: String? = nil
    var _allowNsfw: Bool? = nil
    var _timestamp: SwiftProtobuf.Google_Protobuf_Timestamp? = nil
    var _type: String? = nil
    var _notificationID: String? = nil
    var _modelType: Proto_ModelType? = nil
    var _generationSteps: Proto_GenerationSteps? = nil
    var _generationQuality: Proto_GenerationQuality? = nil
    var _aspectRatio: Proto_AspectRatio? = nil
    var _guidanceScale: Proto_GuidanceScale? = nil
    var _startImage: String? = nil
    var _controlStrength: Int64? = nil
    var _hitsToSkip: Int64? = nil
    var _maskImage: String? = nil
    var _backendReleaseVersion: String? = nil
    var _appVersion: String? = nil
    var _controlType: Proto_ControlType? = nil
    var _controlSource: String? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _uid = source._uid
      _appID = source._appID
      _requestID = source._requestID
      _promptPositive = source._promptPositive
      _promptNegative = source._promptNegative
      _allowNsfw = source._allowNsfw
      _timestamp = source._timestamp
      _type = source._type
      _notificationID = source._notificationID
      _modelType = source._modelType
      _generationSteps = source._generationSteps
      _generationQuality = source._generationQuality
      _aspectRatio = source._aspectRatio
      _guidanceScale = source._guidanceScale
      _startImage = source._startImage
      _controlStrength = source._controlStrength
      _hitsToSkip = source._hitsToSkip
      _maskImage = source._maskImage
      _backendReleaseVersion = source._backendReleaseVersion
      _appVersion = source._appVersion
      _controlType = source._controlType
      _controlSource = source._controlSource
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularStringField(value: &_storage._uid) }()
        case 2: try { try decoder.decodeSingularStringField(value: &_storage._appID) }()
        case 3: try { try decoder.decodeSingularStringField(value: &_storage._requestID) }()
        case 4: try { try decoder.decodeSingularStringField(value: &_storage._promptPositive) }()
        case 5: try { try decoder.decodeSingularStringField(value: &_storage._promptNegative) }()
        case 6: try { try decoder.decodeSingularBoolField(value: &_storage._allowNsfw) }()
        case 7: try { try decoder.decodeSingularMessageField(value: &_storage._timestamp) }()
        case 8: try { try decoder.decodeSingularStringField(value: &_storage._type) }()
        case 9: try { try decoder.decodeSingularStringField(value: &_storage._notificationID) }()
        case 10: try { try decoder.decodeSingularEnumField(value: &_storage._modelType) }()
        case 11: try { try decoder.decodeSingularEnumField(value: &_storage._generationSteps) }()
        case 12: try { try decoder.decodeSingularEnumField(value: &_storage._generationQuality) }()
        case 13: try { try decoder.decodeSingularEnumField(value: &_storage._aspectRatio) }()
        case 14: try { try decoder.decodeSingularEnumField(value: &_storage._guidanceScale) }()
        case 15: try { try decoder.decodeSingularStringField(value: &_storage._startImage) }()
        case 16: try { try decoder.decodeSingularInt64Field(value: &_storage._controlStrength) }()
        case 17: try { try decoder.decodeSingularInt64Field(value: &_storage._hitsToSkip) }()
        case 18: try { try decoder.decodeSingularStringField(value: &_storage._maskImage) }()
        case 19: try { try decoder.decodeSingularStringField(value: &_storage._backendReleaseVersion) }()
        case 20: try { try decoder.decodeSingularStringField(value: &_storage._appVersion) }()
        case 21: try { try decoder.decodeSingularEnumField(value: &_storage._controlType) }()
        case 22: try { try decoder.decodeSingularStringField(value: &_storage._controlSource) }()
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every if/case branch local when no optimizations
      // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
      // https://github.com/apple/swift-protobuf/issues/1182
      try { if let v = _storage._uid {
        try visitor.visitSingularStringField(value: v, fieldNumber: 1)
      } }()
      try { if let v = _storage._appID {
        try visitor.visitSingularStringField(value: v, fieldNumber: 2)
      } }()
      try { if let v = _storage._requestID {
        try visitor.visitSingularStringField(value: v, fieldNumber: 3)
      } }()
      try { if let v = _storage._promptPositive {
        try visitor.visitSingularStringField(value: v, fieldNumber: 4)
      } }()
      try { if let v = _storage._promptNegative {
        try visitor.visitSingularStringField(value: v, fieldNumber: 5)
      } }()
      try { if let v = _storage._allowNsfw {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 6)
      } }()
      try { if let v = _storage._timestamp {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      } }()
      try { if let v = _storage._type {
        try visitor.visitSingularStringField(value: v, fieldNumber: 8)
      } }()
      try { if let v = _storage._notificationID {
        try visitor.visitSingularStringField(value: v, fieldNumber: 9)
      } }()
      try { if let v = _storage._modelType {
        try visitor.visitSingularEnumField(value: v, fieldNumber: 10)
      } }()
      try { if let v = _storage._generationSteps {
        try visitor.visitSingularEnumField(value: v, fieldNumber: 11)
      } }()
      try { if let v = _storage._generationQuality {
        try visitor.visitSingularEnumField(value: v, fieldNumber: 12)
      } }()
      try { if let v = _storage._aspectRatio {
        try visitor.visitSingularEnumField(value: v, fieldNumber: 13)
      } }()
      try { if let v = _storage._guidanceScale {
        try visitor.visitSingularEnumField(value: v, fieldNumber: 14)
      } }()
      try { if let v = _storage._startImage {
        try visitor.visitSingularStringField(value: v, fieldNumber: 15)
      } }()
      try { if let v = _storage._controlStrength {
        try visitor.visitSingularInt64Field(value: v, fieldNumber: 16)
      } }()
      try { if let v = _storage._hitsToSkip {
        try visitor.visitSingularInt64Field(value: v, fieldNumber: 17)
      } }()
      try { if let v = _storage._maskImage {
        try visitor.visitSingularStringField(value: v, fieldNumber: 18)
      } }()
      try { if let v = _storage._backendReleaseVersion {
        try visitor.visitSingularStringField(value: v, fieldNumber: 19)
      } }()
      try { if let v = _storage._appVersion {
        try visitor.visitSingularStringField(value: v, fieldNumber: 20)
      } }()
      try { if let v = _storage._controlType {
        try visitor.visitSingularEnumField(value: v, fieldNumber: 21)
      } }()
      try { if let v = _storage._controlSource {
        try visitor.visitSingularStringField(value: v, fieldNumber: 22)
      } }()
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Proto_PromptRequest, rhs: Proto_PromptRequest) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._uid != rhs_storage._uid {return false}
        if _storage._appID != rhs_storage._appID {return false}
        if _storage._requestID != rhs_storage._requestID {return false}
        if _storage._promptPositive != rhs_storage._promptPositive {return false}
        if _storage._promptNegative != rhs_storage._promptNegative {return false}
        if _storage._allowNsfw != rhs_storage._allowNsfw {return false}
        if _storage._timestamp != rhs_storage._timestamp {return false}
        if _storage._type != rhs_storage._type {return false}
        if _storage._notificationID != rhs_storage._notificationID {return false}
        if _storage._modelType != rhs_storage._modelType {return false}
        if _storage._generationSteps != rhs_storage._generationSteps {return false}
        if _storage._generationQuality != rhs_storage._generationQuality {return false}
        if _storage._aspectRatio != rhs_storage._aspectRatio {return false}
        if _storage._guidanceScale != rhs_storage._guidanceScale {return false}
        if _storage._startImage != rhs_storage._startImage {return false}
        if _storage._controlStrength != rhs_storage._controlStrength {return false}
        if _storage._hitsToSkip != rhs_storage._hitsToSkip {return false}
        if _storage._maskImage != rhs_storage._maskImage {return false}
        if _storage._backendReleaseVersion != rhs_storage._backendReleaseVersion {return false}
        if _storage._appVersion != rhs_storage._appVersion {return false}
        if _storage._controlType != rhs_storage._controlType {return false}
        if _storage._controlSource != rhs_storage._controlSource {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Proto_Prompt: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".Prompt"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "name"),
    2: .same(proto: "description"),
    3: .same(proto: "date"),
    4: .same(proto: "seed"),
    5: .same(proto: "promptPositive"),
    6: .same(proto: "promptNegative"),
    7: .same(proto: "sampleImagePath"),
    8: .same(proto: "isExample"),
    10: .same(proto: "modelType"),
    11: .same(proto: "generationSteps"),
    12: .same(proto: "generationQuality"),
    13: .same(proto: "aspectRatio"),
    14: .same(proto: "guidanceScale"),
    15: .same(proto: "startImage"),
    16: .same(proto: "controlStrength"),
    17: .same(proto: "generationCount"),
    18: .same(proto: "tags"),
    19: .same(proto: "maskImage"),
    20: .same(proto: "modifierStrength"),
    21: .same(proto: "controlType"),
    22: .same(proto: "controlSource"),
    23: .same(proto: "hidden"),
    24: .same(proto: "timestamp"),
    25: .same(proto: "uid"),
    26: .same(proto: "postType"),
    27: .same(proto: "threadID"),
    28: .same(proto: "promptID"),
    29: .same(proto: "enforcedPromptNegative"),
  ]

  fileprivate class _StorageClass {
    var _name: String? = nil
    var _description_p: String? = nil
    var _date: Int64? = nil
    var _seed: Int64? = nil
    var _promptPositive: String? = nil
    var _promptNegative: String? = nil
    var _sampleImagePath: [String] = []
    var _isExample: Bool? = nil
    var _modelType: Proto_ModelType? = nil
    var _generationSteps: Proto_GenerationSteps? = nil
    var _generationQuality: Proto_GenerationQuality? = nil
    var _aspectRatio: Proto_AspectRatio? = nil
    var _guidanceScale: Proto_GuidanceScale? = nil
    var _startImage: String? = nil
    var _controlStrength: Int64? = nil
    var _generationCount: Int64? = nil
    var _tags: [String] = []
    var _maskImage: String? = nil
    var _modifierStrength: Float? = nil
    var _controlType: Proto_ControlType? = nil
    var _controlSource: String? = nil
    var _hidden: Bool? = nil
    var _timestamp: Double? = nil
    var _uid: String? = nil
    var _postType: Proto_RealmPostType? = nil
    var _threadID: String? = nil
    var _promptID: String? = nil
    var _enforcedPromptNegative: String? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _name = source._name
      _description_p = source._description_p
      _date = source._date
      _seed = source._seed
      _promptPositive = source._promptPositive
      _promptNegative = source._promptNegative
      _sampleImagePath = source._sampleImagePath
      _isExample = source._isExample
      _modelType = source._modelType
      _generationSteps = source._generationSteps
      _generationQuality = source._generationQuality
      _aspectRatio = source._aspectRatio
      _guidanceScale = source._guidanceScale
      _startImage = source._startImage
      _controlStrength = source._controlStrength
      _generationCount = source._generationCount
      _tags = source._tags
      _maskImage = source._maskImage
      _modifierStrength = source._modifierStrength
      _controlType = source._controlType
      _controlSource = source._controlSource
      _hidden = source._hidden
      _timestamp = source._timestamp
      _uid = source._uid
      _postType = source._postType
      _threadID = source._threadID
      _promptID = source._promptID
      _enforcedPromptNegative = source._enforcedPromptNegative
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularStringField(value: &_storage._name) }()
        case 2: try { try decoder.decodeSingularStringField(value: &_storage._description_p) }()
        case 3: try { try decoder.decodeSingularInt64Field(value: &_storage._date) }()
        case 4: try { try decoder.decodeSingularInt64Field(value: &_storage._seed) }()
        case 5: try { try decoder.decodeSingularStringField(value: &_storage._promptPositive) }()
        case 6: try { try decoder.decodeSingularStringField(value: &_storage._promptNegative) }()
        case 7: try { try decoder.decodeRepeatedStringField(value: &_storage._sampleImagePath) }()
        case 8: try { try decoder.decodeSingularBoolField(value: &_storage._isExample) }()
        case 10: try { try decoder.decodeSingularEnumField(value: &_storage._modelType) }()
        case 11: try { try decoder.decodeSingularEnumField(value: &_storage._generationSteps) }()
        case 12: try { try decoder.decodeSingularEnumField(value: &_storage._generationQuality) }()
        case 13: try { try decoder.decodeSingularEnumField(value: &_storage._aspectRatio) }()
        case 14: try { try decoder.decodeSingularEnumField(value: &_storage._guidanceScale) }()
        case 15: try { try decoder.decodeSingularStringField(value: &_storage._startImage) }()
        case 16: try { try decoder.decodeSingularInt64Field(value: &_storage._controlStrength) }()
        case 17: try { try decoder.decodeSingularInt64Field(value: &_storage._generationCount) }()
        case 18: try { try decoder.decodeRepeatedStringField(value: &_storage._tags) }()
        case 19: try { try decoder.decodeSingularStringField(value: &_storage._maskImage) }()
        case 20: try { try decoder.decodeSingularFloatField(value: &_storage._modifierStrength) }()
        case 21: try { try decoder.decodeSingularEnumField(value: &_storage._controlType) }()
        case 22: try { try decoder.decodeSingularStringField(value: &_storage._controlSource) }()
        case 23: try { try decoder.decodeSingularBoolField(value: &_storage._hidden) }()
        case 24: try { try decoder.decodeSingularDoubleField(value: &_storage._timestamp) }()
        case 25: try { try decoder.decodeSingularStringField(value: &_storage._uid) }()
        case 26: try { try decoder.decodeSingularEnumField(value: &_storage._postType) }()
        case 27: try { try decoder.decodeSingularStringField(value: &_storage._threadID) }()
        case 28: try { try decoder.decodeSingularStringField(value: &_storage._promptID) }()
        case 29: try { try decoder.decodeSingularStringField(value: &_storage._enforcedPromptNegative) }()
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every if/case branch local when no optimizations
      // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
      // https://github.com/apple/swift-protobuf/issues/1182
      try { if let v = _storage._name {
        try visitor.visitSingularStringField(value: v, fieldNumber: 1)
      } }()
      try { if let v = _storage._description_p {
        try visitor.visitSingularStringField(value: v, fieldNumber: 2)
      } }()
      try { if let v = _storage._date {
        try visitor.visitSingularInt64Field(value: v, fieldNumber: 3)
      } }()
      try { if let v = _storage._seed {
        try visitor.visitSingularInt64Field(value: v, fieldNumber: 4)
      } }()
      try { if let v = _storage._promptPositive {
        try visitor.visitSingularStringField(value: v, fieldNumber: 5)
      } }()
      try { if let v = _storage._promptNegative {
        try visitor.visitSingularStringField(value: v, fieldNumber: 6)
      } }()
      if !_storage._sampleImagePath.isEmpty {
        try visitor.visitRepeatedStringField(value: _storage._sampleImagePath, fieldNumber: 7)
      }
      try { if let v = _storage._isExample {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 8)
      } }()
      try { if let v = _storage._modelType {
        try visitor.visitSingularEnumField(value: v, fieldNumber: 10)
      } }()
      try { if let v = _storage._generationSteps {
        try visitor.visitSingularEnumField(value: v, fieldNumber: 11)
      } }()
      try { if let v = _storage._generationQuality {
        try visitor.visitSingularEnumField(value: v, fieldNumber: 12)
      } }()
      try { if let v = _storage._aspectRatio {
        try visitor.visitSingularEnumField(value: v, fieldNumber: 13)
      } }()
      try { if let v = _storage._guidanceScale {
        try visitor.visitSingularEnumField(value: v, fieldNumber: 14)
      } }()
      try { if let v = _storage._startImage {
        try visitor.visitSingularStringField(value: v, fieldNumber: 15)
      } }()
      try { if let v = _storage._controlStrength {
        try visitor.visitSingularInt64Field(value: v, fieldNumber: 16)
      } }()
      try { if let v = _storage._generationCount {
        try visitor.visitSingularInt64Field(value: v, fieldNumber: 17)
      } }()
      if !_storage._tags.isEmpty {
        try visitor.visitRepeatedStringField(value: _storage._tags, fieldNumber: 18)
      }
      try { if let v = _storage._maskImage {
        try visitor.visitSingularStringField(value: v, fieldNumber: 19)
      } }()
      try { if let v = _storage._modifierStrength {
        try visitor.visitSingularFloatField(value: v, fieldNumber: 20)
      } }()
      try { if let v = _storage._controlType {
        try visitor.visitSingularEnumField(value: v, fieldNumber: 21)
      } }()
      try { if let v = _storage._controlSource {
        try visitor.visitSingularStringField(value: v, fieldNumber: 22)
      } }()
      try { if let v = _storage._hidden {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 23)
      } }()
      try { if let v = _storage._timestamp {
        try visitor.visitSingularDoubleField(value: v, fieldNumber: 24)
      } }()
      try { if let v = _storage._uid {
        try visitor.visitSingularStringField(value: v, fieldNumber: 25)
      } }()
      try { if let v = _storage._postType {
        try visitor.visitSingularEnumField(value: v, fieldNumber: 26)
      } }()
      try { if let v = _storage._threadID {
        try visitor.visitSingularStringField(value: v, fieldNumber: 27)
      } }()
      try { if let v = _storage._promptID {
        try visitor.visitSingularStringField(value: v, fieldNumber: 28)
      } }()
      try { if let v = _storage._enforcedPromptNegative {
        try visitor.visitSingularStringField(value: v, fieldNumber: 29)
      } }()
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Proto_Prompt, rhs: Proto_Prompt) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._name != rhs_storage._name {return false}
        if _storage._description_p != rhs_storage._description_p {return false}
        if _storage._date != rhs_storage._date {return false}
        if _storage._seed != rhs_storage._seed {return false}
        if _storage._promptPositive != rhs_storage._promptPositive {return false}
        if _storage._promptNegative != rhs_storage._promptNegative {return false}
        if _storage._sampleImagePath != rhs_storage._sampleImagePath {return false}
        if _storage._isExample != rhs_storage._isExample {return false}
        if _storage._modelType != rhs_storage._modelType {return false}
        if _storage._generationSteps != rhs_storage._generationSteps {return false}
        if _storage._generationQuality != rhs_storage._generationQuality {return false}
        if _storage._aspectRatio != rhs_storage._aspectRatio {return false}
        if _storage._guidanceScale != rhs_storage._guidanceScale {return false}
        if _storage._startImage != rhs_storage._startImage {return false}
        if _storage._controlStrength != rhs_storage._controlStrength {return false}
        if _storage._generationCount != rhs_storage._generationCount {return false}
        if _storage._tags != rhs_storage._tags {return false}
        if _storage._maskImage != rhs_storage._maskImage {return false}
        if _storage._modifierStrength != rhs_storage._modifierStrength {return false}
        if _storage._controlType != rhs_storage._controlType {return false}
        if _storage._controlSource != rhs_storage._controlSource {return false}
        if _storage._hidden != rhs_storage._hidden {return false}
        if _storage._timestamp != rhs_storage._timestamp {return false}
        if _storage._uid != rhs_storage._uid {return false}
        if _storage._postType != rhs_storage._postType {return false}
        if _storage._threadID != rhs_storage._threadID {return false}
        if _storage._promptID != rhs_storage._promptID {return false}
        if _storage._enforcedPromptNegative != rhs_storage._enforcedPromptNegative {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Proto_Prompts: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".Prompts"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "prompts"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeRepeatedMessageField(value: &self.prompts) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.prompts.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.prompts, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Proto_Prompts, rhs: Proto_Prompts) -> Bool {
    if lhs.prompts != rhs.prompts {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Proto_Features: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".Features"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "features"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeRepeatedFloatField(value: &self.features) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.features.isEmpty {
      try visitor.visitPackedFloatField(value: self.features, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Proto_Features, rhs: Proto_Features) -> Bool {
    if lhs.features != rhs.features {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
